
export const PricingTierEnvKey = 'F_PRICING_TIERS' as const
export type PricingTierEnvKey = typeof PricingTierEnvKey
export type PricingTierEnvValues = { aumCovered: number, fee: number }[]
export const EnvKeys = [
	'F_MINIMUM_ANNUAL_NOVISCIENT_FEE',
	'F_UPFRONT_DEPOSIT_DEC',
	
	// SETUP EXPENSES > SUB FUND
	'SUB_FUND_SETUP__LEGAL_COST_DEC',
	'SUB_FUND_SETUP__TAX_INPUT_COST_DEC',
	'SUB_FUND_SETUP__ACRA_SETUP_COST_DEC',
	'SUB_FUND_SETUP__SERVICE_PROVIDER_ONBOARDING_COST_DEC',

	// SETUP EXPENSES > VCC UMBRELLA
	'VCC_UMBRELLA_SETUP__LEGAL_COST_DEC',
	'VCC_UMBRELLA_SETUP__TAX_INPUT_COST_DEC',
	'VCC_UMBRELLA_SETUP__ACRA_SETUP_COST_DEC',
	'VCC_UMBRELLA_SETUP__SERVICE_PROVIDER_ONBOARDING_COST_DEC',

	// ANNUAL FUND EXPENSES > SUB FUND
	'SUB_FUND_ANNUAL__FUND_ADMIN_COST_MIN_DEC',
	'SUB_FUND_ANNUAL__AUDIT_COST_MIN_DEC',
	'SUB_FUND_ANNUAL__LEGAL_COST_DEC',
	'SUB_FUND_ANNUAL__ACRA_RETURN_FILING_COST_DEC',
	'SUB_FUND_ANNUAL__RISK_AND_TRADING_SYSTEM_FEES_DEC',
	'SUB_FUND_ANNUAL__DIRECTOR_SERVICES_FEE_DEC',
	// reimburstment = setup_total / 5
	
	// ANNUAL FUND EXPENSES > VCC UMBRELLA
	'VCC_UMBRELLA_ANNUAL__FUND_ADMIN_COST_DEC',
	// audit cost = 2x subfund's
	'VCC_UMBRELLA_ANNUAL__LEGAL_COST_DEC',
	'VCC_UMBRELLA_ANNUAL__ACRA_RETURN_FILING_COST_DEC',
	'VCC_UMBRELLA_ANNUAL__RISK_AND_TRADING_SYSTEM_FEES_DEC',
	'VCC_UMBRELLA_ANNUAL__DIRECTOR_SERVICES_FEE_DEC',
	// reimburstment = setup_total / 5

	// DEV - STAGING USES
	'IS_DEMO_STANDALONE_LAYOUT'
] as const
export type EnvKey = typeof EnvKeys[number]

declare global {
	interface Window {
		__NVS_CALC_ENV__?: Partial<Record<EnvKey, number>> & Partial<Record<PricingTierEnvKey, PricingTierEnvValues>>
	}
}
window.__NVS_CALC_ENV__ = {

	// GENERAL
	F_MINIMUM_ANNUAL_NOVISCIENT_FEE: 40_000,
	F_UPFRONT_DEPOSIT_DEC: 5_000,
	F_PRICING_TIERS: [
		{ aumCovered: 20_000_000, fee: 0.003 },
		{ aumCovered: 80_000_000, fee: 0.0025 },
		{ aumCovered: 50_000_000, fee: 0.002 },
		{ aumCovered: 500_000_000, fee: 0.0015 },
	],

	// SETUP EXPENSES > SUB FUND
	SUB_FUND_SETUP__LEGAL_COST_DEC: 3_000,
	SUB_FUND_SETUP__TAX_INPUT_COST_DEC: 0,
	SUB_FUND_SETUP__ACRA_SETUP_COST_DEC: 300,
	SUB_FUND_SETUP__SERVICE_PROVIDER_ONBOARDING_COST_DEC: 2_500,

	// SETUP EXPENSES > VCC UMBRELLA
	VCC_UMBRELLA_SETUP__LEGAL_COST_DEC: 35_000,
	VCC_UMBRELLA_SETUP__TAX_INPUT_COST_DEC: 4_000,
	VCC_UMBRELLA_SETUP__ACRA_SETUP_COST_DEC: 5_500,
	VCC_UMBRELLA_SETUP__SERVICE_PROVIDER_ONBOARDING_COST_DEC: 4_000,

	// ANNUAL FUND EXPENSES > SUB FUND
	SUB_FUND_ANNUAL__FUND_ADMIN_COST_MIN_DEC: 25_000,
	SUB_FUND_ANNUAL__AUDIT_COST_MIN_DEC: 14_000 / 1.35,
	SUB_FUND_ANNUAL__LEGAL_COST_DEC: 2_000,
	SUB_FUND_ANNUAL__ACRA_RETURN_FILING_COST_DEC: 1_600,
	SUB_FUND_ANNUAL__RISK_AND_TRADING_SYSTEM_FEES_DEC: 2_000,
	SUB_FUND_ANNUAL__DIRECTOR_SERVICES_FEE_DEC: 5_400,

	// ANNUAL FUND EXPENSES > VCC UMBRELLA
	VCC_UMBRELLA_ANNUAL__FUND_ADMIN_COST_DEC: 36_000,
	// audit cost = 2x subfund's
	VCC_UMBRELLA_ANNUAL__LEGAL_COST_DEC: 4_000,
	VCC_UMBRELLA_ANNUAL__ACRA_RETURN_FILING_COST_DEC: 2_000,
	VCC_UMBRELLA_ANNUAL__RISK_AND_TRADING_SYSTEM_FEES_DEC: 3_000,
	VCC_UMBRELLA_ANNUAL__DIRECTOR_SERVICES_FEE_DEC: 12_000,

	// DEV - STAGING USES
	IS_DEMO_STANDALONE_LAYOUT: 0
}
export const env = EnvKeys.reduce((acc, k) => {
	acc[k] = Number(window.__NVS_CALC_ENV__?.[k] ?? '0')
	return acc
}, {} as Record<EnvKey, number> & Record<PricingTierEnvKey, PricingTierEnvValues>)
env.F_PRICING_TIERS = window.__NVS_CALC_ENV__?.F_PRICING_TIERS ?? []
